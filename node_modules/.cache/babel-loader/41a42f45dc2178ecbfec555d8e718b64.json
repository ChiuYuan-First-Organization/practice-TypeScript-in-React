{"ast":null,"code":"var _jsxFileName = \"/Users/adam/Downloads/typescript-in-react/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Todos from \"./components/Todos\";\nimport Todo from './models/todo';\nimport NewTodo from \"./components/NewTodo\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState([]); // initial empty array won't conflict with the type definition.\n\n  const addTodoHandler = value => {\n    const todoText = new Todo(value);\n    setTodos(current => [...current, todoText]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NewTodo, {\n      onAddTodo: addTodoHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Todos, {\n      items: todos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ZATHeV9x55jFrDOww2hwcxQ3V1U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/adam/Downloads/typescript-in-react/src/App.tsx"],"names":["React","useState","Todos","Todo","NewTodo","App","todos","setTodos","addTodoHandler","value","todoText","current"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,OAAO,WAAP;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAS,EAAT,CAAlC,CADa,CACmC;;AAEhD,QAAMO,cAAc,GAAIC,KAAD,IAAmB;AACxC,UAAMC,QAAQ,GAAG,IAAIP,IAAJ,CAASM,KAAT,CAAjB;AACAF,IAAAA,QAAQ,CAAEI,OAAD,IAAa,CAAC,GAAGA,OAAJ,EAAaD,QAAb,CAAd,CAAR;AACD,GAHD;;AAMA,sBACE;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,SAAS,EAAEF;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEF;AAAd;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAfQD,G;;KAAAA,G;AAiBT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport Todos from \"./components/Todos\";\nimport Todo from './models/todo';\nimport NewTodo from \"./components/NewTodo\";\n\nimport \"./App.css\";\n\n\nfunction App() {\n  const [todos, setTodos] = useState<Todo[]>([]); // initial empty array won't conflict with the type definition.\n\n  const addTodoHandler = (value: string) => {\n    const todoText = new Todo(value);\n    setTodos((current) => [...current, todoText]);\n  };\n\n\n  return (\n    <div>\n      <NewTodo onAddTodo={addTodoHandler} />\n      <Todos items={todos} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}