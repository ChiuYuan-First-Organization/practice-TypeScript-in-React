{"ast":null,"code":"var _jsxFileName = \"/Users/adam/Desktop/practice-react/practice12/src/store/todos-context.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Todo from \"../models/Todo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodosContext = /*#__PURE__*/React.createContext({\n  items: [],\n  addTodo: () => {},\n  removeTodo: () => {}\n});\n\nconst TodosProvider = props => {\n  _s();\n\n  const [items, setItems] = useState([]);\n\n  const addTodoHandler = text => {\n    const newTodo = new Todo(text);\n    setItems(prev => [...prev, newTodo]);\n  };\n\n  const removeTodoHandler = id => {\n    setItems(prev => prev.filter(todo => todo.id !== id));\n  };\n\n  const todoContextValue = {\n    items,\n    addTodo: addTodoHandler,\n    removeTodo: removeTodoHandler\n  };\n  return /*#__PURE__*/_jsxDEV(TodosContext.Provider, {\n    value: todoContextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodosProvider, \"6WAym07vHedVzpAy8bFDJKqtv8I=\");\n\n_c = TodosProvider;\nexport default TodosProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodosProvider\");","map":{"version":3,"sources":["/Users/adam/Desktop/practice-react/practice12/src/store/todos-context.tsx"],"names":["React","useState","Todo","TodosContext","createContext","items","addTodo","removeTodo","TodosProvider","props","setItems","addTodoHandler","text","newTodo","prev","removeTodoHandler","id","filter","todo","todoContextValue","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,gBAAjB;;AAQA,OAAO,MAAMC,YAAY,gBAAGH,KAAK,CAACI,aAAN,CAAoC;AAC9DC,EAAAA,KAAK,EAAE,EADuD;AAE9DC,EAAAA,OAAO,EAAE,MAAM,CAAE,CAF6C;AAG9DC,EAAAA,UAAU,EAAE,MAAM,CAAE;AAH0C,CAApC,CAArB;;AAMP,MAAMC,aAAuB,GAAIC,KAAD,IAAW;AAAA;;AACzC,QAAM,CAACJ,KAAD,EAAQK,QAAR,IAAoBT,QAAQ,CAAS,EAAT,CAAlC;;AAEA,QAAMU,cAAc,GAAIC,IAAD,IAAkB;AACvC,UAAMC,OAAO,GAAG,IAAIX,IAAJ,CAASU,IAAT,CAAhB;AACAF,IAAAA,QAAQ,CAAEI,IAAD,IAAU,CAAC,GAAGA,IAAJ,EAAUD,OAAV,CAAX,CAAR;AACD,GAHD;;AAKA,QAAME,iBAAiB,GAAIC,EAAD,IAAgB;AACxCN,IAAAA,QAAQ,CAAEI,IAAD,IAAUA,IAAI,CAACG,MAAL,CAAaC,IAAD,IAAUA,IAAI,CAACF,EAAL,KAAYA,EAAlC,CAAX,CAAR;AACD,GAFD;;AAIA,QAAMG,gBAAgC,GAAG;AACvCd,IAAAA,KADuC;AAEvCC,IAAAA,OAAO,EAAEK,cAF8B;AAGvCJ,IAAAA,UAAU,EAAEQ;AAH2B,GAAzC;AAMA,sBACE,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEI,gBAA9B;AAAA,cACGV,KAAK,CAACW;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAvBD;;GAAMZ,a;;KAAAA,a;AAyBN,eAAeA,aAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Todo from \"../models/Todo\";\n\ntype todoContextObj = {\n  items: Todo[];\n  addTodo: (text: string) => void;\n  removeTodo: (id: string) => void;\n};\n\nexport const TodosContext = React.createContext<todoContextObj>({\n  items: [],\n  addTodo: () => {},\n  removeTodo: () => {},\n});\n\nconst TodosProvider: React.FC = (props) => {\n  const [items, setItems] = useState<Todo[]>([]);\n\n  const addTodoHandler = (text: string) => {\n    const newTodo = new Todo(text);\n    setItems((prev) => [...prev, newTodo]);\n  };\n\n  const removeTodoHandler = (id: string) => {\n    setItems((prev) => prev.filter((todo) => todo.id !== id));\n  };\n\n  const todoContextValue: todoContextObj = {\n    items,\n    addTodo: addTodoHandler,\n    removeTodo: removeTodoHandler,\n  };\n\n  return (\n    <TodosContext.Provider value={todoContextValue}>\n      {props.children}\n    </TodosContext.Provider>\n  );\n};\n\nexport default TodosProvider;\n"]},"metadata":{},"sourceType":"module"}